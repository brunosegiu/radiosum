#version 430

#define FACES  5

layout(local_size_x = 1, local_size_y = 1) in;
layout(std430, binding = 0) writeonly buffer ssbo {
	uint row[];
};
layout(r32ui, binding = 0) uniform uimage2DArray hemicube;

uniform float width;

uint getFaceId(ivec2 coord, uint face){
	return imageLoad(hemicube, ivec3(coord, face)).r;
}

void main() {
	ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
	for (uint i = 0; i < FACES; i++) {
		uint face = getFaceId(coords, i);
		atomicAdd(row[face],1);
	}
}